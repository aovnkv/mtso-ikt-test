{"version":3,"sources":["history.js","containers/Header.js","services/api/baseURL.js","services/api/index.js","components/LoginForm.js","store/actions.js","components/Spinner.js","components/UserNotFound.js","components/Profile.js","components/News.js","components/Logout.js","containers/Main.js","App.js","store/reducers/loginReducer.js","store/reducers/newsReducer.js","store/reducers/userProfileReducer.js","store/reducers.js","index.js"],"names":["createBrowserHistory","withRouter","connect","_ref2","loginReducer","_ref","isSubmitting","userID","useContext","UserContext","logInOutButton","react_default","a","createElement","react_router_dom","to","className","activeClassName","disabled","profile","API_ROOT","validate","Object","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","axios","post","concat","restURL","abrupt","sent","stop","_x","apply","this","arguments","getUserInfo","_callee2","id","_context2","get","_x2","fetchNews","_ref3","_callee3","_context3","mapDispatchToProps","authenticateUser","loginData","dispatch","res","type","status","history","push","err","message","t0","Error","_useState","useState","email","password","showMessage","_useState2","slicedToArray","formValues","setFormValues","handleChange","e","_objectSpread","defineProperty","target","name","value","handleSubmit","preventDefault","console","log","warning","style","color","onSubmit","onChange","pattern","required","htmlFor","Spinner","UserNotFound","getUserProfile","then","userData","catch","userProfileReducer","isFetching","error","isUserNotFound","useEffect","icons","social","map","icon","key","label","href","link","components_Spinner","components_UserNotFound","city","languages","getNews","newsData","newsReducer","news","item","title","text","length","logoutUser","onClick","heading","react_router","path","exact","render","component","LoginForm","Logout","Profile","News","createContext","undefined","Provider","src_containers_Header","src_containers_Main","initialState","state","action","loginReducer_objectSpread","newsReducer_objectSpread","userProfileReducer_objectSpread","rootReducer","combineReducers","__webpack_require__","d","__webpack_exports__","store","logger","createLogger","persistConfig","storage","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","persistor","persistStore","es","integration_react","loading","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e740beb7.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { UserContext } from '../App';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = ({isSubmitting}) => {\n\n    const userID = useContext(UserContext);\n\n    let logInOutButton = userID\n      ?\n      <NavLink to=\"/logout\" className=\"btn-link\" activeClassName=\"active\">\n        <button className=\"btn btn-logout\">Выйти</button>\n      </NavLink>\n      :\n      <NavLink to=\"/login\" className=\"btn-link\" activeClassName=\"active\">\n        <button className=\"btn btn-login\" disabled={isSubmitting}>Войти</button>\n      </NavLink>\n      ;\n\n    let profile = userID &&\n    <div className=\"nav-item\">\n      <NavLink to=\"/profile\" className=\"nav-link\" activeClassName=\"active\">\n        Профиль\n      </NavLink>\n    </div>\n\n    return (\n      <div className=\"App-header\">\n        <nav className=\"nav\">\n          <div className=\"nav-item\">\n            { logInOutButton }\n          </div>\n            { profile }\n          <div className=\"nav-item\">\n            <NavLink to=\"/news\" className=\"nav-link\" activeClassName=\"active\">\n              Новости\n            </NavLink>\n          </div>\n        </nav>\n      </div>\n    );\n}\n\nconst mapStateToProps = ({ loginReducer }) => loginReducer;\nexport default withRouter(connect(mapStateToProps)(Header));\n\n","const API_ROOT = 'https://mysterious-reef-29460.herokuapp.com/api/v1';\n\nexport default API_ROOT;\n","import axios from 'axios';\nimport restURL from './baseURL';\n\nexport const validate = async data =>\n  await axios.post(`${restURL}/validate/`, data);\n\nexport const getUserInfo = async id =>\n  await axios.get(`${restURL}/user-info/${id}`);\n\nexport const fetchNews = async () => await axios.get(`${restURL}/news/`);","import React, { useState, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { UserContext } from '../App';\nimport { authenticateUser } from '../store/actions';\nimport './LoginForm.css';\n\nconst LoginForm = ({ authenticateUser, isSubmitting }) => {\n  const [formValues, setFormValues] = useState({ email: '', password: '', showMessage: false, message: 'Вы ввели неверный логин или пароль' })\n  const handleChange = e => setFormValues({ ...formValues, [e.target.name]: e.target.value })\n  const userID = useContext(UserContext);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await authenticateUser(formValues);\n      if (res === 'wrong_email_or_password') {\n        setFormValues({...formValues, password: '', showMessage: true});\n      }\n    } catch (error) {\n        console.log(error.message);\n    }\n  };\n  const warning = formValues.showMessage && <div style={{ color: 'red' }} className=\"warning\">{ formValues.message }</div>;\n  if (userID) return <div className=\"content\"><h1>Вы уже вошли на сайт как {userID}</h1></div>;\n\n  return (\n    <div className=\"content\">\n      <h1 className=\"content__header\">Вход на сайт:</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input\n          onChange={handleChange}\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          value={formValues.email}\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n          required>\n          </input>\n          <label htmlFor=\"email\">Эл. почта</label>\n        </div>\n        <div>\n          <input onChange={ handleChange } id=\"password\" type=\"password\" name=\"password\" value={formValues.password} required></input>\n          <label htmlFor=\"password\">Пароль</label>\n        </div>\n        { warning }\n        <button type=\"submit\" disabled={isSubmitting}>Отправить</button>\n      </form>\n    </div>\n  )\n};\n\nconst mapDispatchToProps = { authenticateUser };\nconst mapStateToProps = ({ loginReducer }) => loginReducer;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import { validate, getUserInfo, fetchNews } from '../services/api/index';\nimport history from '../history';\n\n/* USER AUTHENTICATION */\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGOUT_SUCCESS = 'USER_LOGOUT_SUCCESS';\n\nexport const authenticateUser = loginData => async dispatch => {\n  dispatch({ type: USER_LOGIN_REQUEST });\n  try {\n    const res = await validate(loginData);\n    if (res.data.status === 'ok') {\n      dispatch({ type: USER_LOGIN_SUCCESS, id: res.data.data.id });\n      history.push('/profile');\n    } else if (res.data.status === 'err') {\n      dispatch({ type: USER_LOGIN_FAILURE, err: res.data.message });\n      return res.data.message;\n    }\n  } catch (err) {\n      dispatch({ type: USER_LOGIN_FAILURE, err: \"Сервер недоступен\" });\n      throw new Error(err);\n  }\n};\n\nexport const logoutUser = () => dispatch => {\n  dispatch({ type: USER_LOGOUT_SUCCESS });\n  history.push('/login');\n}\n\n\n/* USER PROFILE DATA */\nexport const GET_USER_PROFILE_REQUEST = 'GET_USER_PROFILE_REQUEST';\nexport const GET_USER_PROFILE_FAILURE = 'GET_USER_PROFILE_FAILURE';\nexport const GET_USER_PROFILE_SUCCESS = 'GET_USER_PROFILE_SUCCESS';\n\nexport const getUserProfile = id => dispatch => {\n  dispatch({ type: GET_USER_PROFILE_REQUEST });\n\n  getUserInfo(id).then(res => {\n    if (res.data.status === 'ok') {\n      dispatch({ type: GET_USER_PROFILE_SUCCESS, userData: res.data.data});\n    } else if (res.data.status === 'err') {\n      dispatch({ type: GET_USER_PROFILE_FAILURE, err: res.data.message });\n    }\n  })\n  .catch (err => {\n    dispatch({ type: GET_USER_PROFILE_FAILURE, err });\n  })\n};\n\n\n/* NEWS DATA */\nexport const GET_NEWS_REQUEST = 'GET_NEWS_REQUEST';\nexport const GET_NEWS_FAILURE = 'GET_NEWS_FAILURE';\nexport const GET_NEWS_SUCCESS = 'GET_NEWS_SUCCESS';\n\nexport const getNews = () => dispatch => {\n  dispatch({ type: GET_NEWS_REQUEST });\n\n  fetchNews().then(res => {\n    if (res.data.status === 'ok') {\n      dispatch({ type: GET_NEWS_SUCCESS, newsData: res.data.data});\n    } else if (res.data.status === 'err') {\n      dispatch({ type: GET_NEWS_FAILURE, err: res.data.message });\n    }\n  })\n  .catch (err => {\n    dispatch({ type: GET_NEWS_FAILURE, err });\n  })\n};","import React from 'react';\n\nconst Spinner = () => (\n    <div className=\"loading\"></div>\n);\n\nexport default Spinner;\n","import React from 'react';\n\nconst UserNotFound = () => (\n    <div className=\"content\">\n        <div className=\"content__header\">Ошибка</div>\n        <div className=\"content__main\">\n            Пользователь не найден.\n        </div>\n    </div>\n);\n\nexport default UserNotFound;","import React, { useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from './Spinner';\nimport UserNotFound from './UserNotFound';\nimport { UserContext } from '../App';\nimport { getUserProfile } from '../store/actions';\nimport './Profile.css';\n\nconst Profile = ({ userData, isFetching, error, getUserProfile }) => {\n    const userID = useContext(UserContext);\n    const isUserNotFound = error === 'user_not_found';\n\n    useEffect(() => {\n        getUserProfile(userID);\n    },[userID, getUserProfile]);\n\n    const icons = userData.social.map(\n        icon => (\n    <li key={icon.label} className={icon.label}>\n        <a href={icon.link}>\n        </a>\n    </li>\n        )\n    );\n\n    if (isFetching) return <Spinner></Spinner>;\n    if (isUserNotFound) return <UserNotFound></UserNotFound>;\n\n    return(\n        <div className=\"content\">\n            <h1 className=\"content__header\">Профиль</h1>\n            <div className=\"content__main profile\">\n                <p><span>Город: </span>{userData.city}</p>\n\n                <h2>Знание языков:</h2>\n                <ul>\n                    <li>+ {userData.languages[0]}</li>\n                    <li>+ {userData.languages[1]}</li>\n                </ul>\n\n                <h2>Ссылки:</h2>\n                <ul className=\"socials\">\n                {icons}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = { getUserProfile };\nconst mapStateToProps = ({ userProfileReducer }) => userProfileReducer;\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getNews } from '../store/actions';\nimport Spinner from './Spinner';\nimport './News.css';\n\nconst News = ({ newsData, isFetching, getNews }) => {\n\nuseEffect(() => getNews(), [getNews]);\n\nconst news = newsData.map( item => (\n    <article key={item.id} id={item.id}>\n        <h2>{item.title}</h2>\n        <p>{item.text}</p>\n    </article>\n));\nif (isFetching) return <Spinner></Spinner>;\nreturn (\n    <div className=\"content\">\n        <h1 className=\"content__header\">Новости</h1>\n        <div className=\"content__main news\">\n            { news }\n            <div className=\"newsAmount\">Всего новостей: { news.length }</div>\n        </div>\n    </div>\n);\n};\n\nconst mapStateToProps = ({ newsReducer }) => newsReducer;\nconst mapDispatchToProps = { getNews };\nexport default connect(mapStateToProps, mapDispatchToProps)(News);","import React from 'react';\nimport { connect } from 'react-redux';\nimport history from '../history';\nimport { logoutUser } from '../store/actions';\n\nconst Logout = ({ logoutUser }) => (\n\n    <div className=\"content\">\n        <div className=\"content__header\"><h1>Вы действительно хотите выйти?</h1></div>\n        <div className=\"content__main\">\n            <button onClick={logoutUser} className=\"btn btn-logout\">Да</button>\n            <button onClick={() => history.push('/profile')} className=\"btn btn-logout\">Нет</button>\n        </div>\n    </div>\n);\n\nconst mapDispatchToProps = { logoutUser };\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useContext } from 'react';\nimport { Route } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { UserContext } from '../App';\nimport LoginForm from '../components/LoginForm';\nimport Profile from '../components/Profile';\nimport News from '../components/News';\nimport Logout from '../components/Logout';\nimport './Main.css';\n\nconst Main = () => {\n\n  const userID = useContext(UserContext);\n  const heading = userID ?\n  <h1>Вы уже авторизованы, как {userID}</h1>\n  :\n  <h1>Вы не авторизованы. Пожалуйста, войдите на сайт.</h1>\n  return (<main className=\"App-main\">\n    <Route\n      path=\"/\"\n      exact\n      render={() => (\n        <div className=\"content\">\n          <div className=\"content__header\">\n          { heading }\n          </div>\n        </div>\n      )}\n    />\n    <Route path=\"/login\" component={LoginForm} />\n    <Route path=\"/logout\" component={Logout} />\n    <Route path=\"/profile\" component={Profile} />\n    <Route path=\"/news\" component={News} />\n  </main>\n  );\n}\nexport default withRouter(Main);\n","import React, { createContext } from 'react';\nimport { Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport history from './history';\nimport './App.css';\nimport Header from './containers/Header';\nimport Main from './containers/Main';\n\nexport const UserContext = createContext({ userID: undefined });\nconst mapStateToProps = ({ loginReducer }) => loginReducer;\n\nconst App = ({ userID } ) => {\n  return (\n    <div className=\"App\">\n      <Router history={ history }>\n        <UserContext.Provider value={ userID }>\n          <Header />\n          <Main />\n        </UserContext.Provider>\n      </Router>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(App);","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_FAILURE,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT_SUCCESS\n} from '../actions';\n\nconst initialState = {\n  userID: undefined,\n  isSubmitting: false,\n  error: null\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { ...state, isSubmitting: true };\n    case USER_LOGIN_FAILURE:\n      return { ...state, isSubmitting: false, error: action.err };\n    case USER_LOGIN_SUCCESS:\n      return { error: null, isSubmitting: false, userID: action.id };\n    case USER_LOGOUT_SUCCESS:\n      return { ...initialState };\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import {\n  GET_NEWS_REQUEST,\n  GET_NEWS_FAILURE,\n  GET_NEWS_SUCCESS\n} from '../actions';\n\nconst initialState = {\n  newsData: {},\n  isFetching: false,\n  error: null\n};\n\nconst newsReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case GET_NEWS_REQUEST:\n      return { ...state, isFetching: true };\n    case GET_NEWS_FAILURE:\n      return { ...state, isFetching: false, error: action.err };\n    case GET_NEWS_SUCCESS:\n      return { error: null, isFetching: false, newsData: action.newsData };\n    default:\n      return state;\n  }\n};\n\nexport default newsReducer;\n","import {\n  GET_USER_PROFILE_REQUEST,\n  GET_USER_PROFILE_FAILURE,\n  GET_USER_PROFILE_SUCCESS,\n} from '../actions';\n\nconst initialState = {\n  userData: {},\n  isFetching: false,\n  error: null\n};\n\nconst userProfileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER_PROFILE_REQUEST:\n      return { ...state, isFetching: true };\n    case GET_USER_PROFILE_FAILURE:\n      return { ...state, isFetching: false, error: action.err };\n    case GET_USER_PROFILE_SUCCESS:\n      return { error: null, isFetching: false, userData: action.userData };\n    default:\n      return state;\n  }\n};\n\nexport default userProfileReducer;\n","import { combineReducers } from 'redux';\nimport loginReducer from './reducers/loginReducer';\nimport newsReducer from './reducers/newsReducer';\nimport userProfileReducer from './reducers/userProfileReducer';\n\nconst rootReducer = combineReducers({ loginReducer, newsReducer, userProfileReducer });\n\nexport default rootReducer;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport App from './App';\nimport rootReducer from './store/reducers';\nimport './index.css';\n\nconst logger = createLogger();\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(thunk, logger))\n);\n\nconst persistor = persistStore(store);\n//const auth = { 'email': 'max@test.com', 'password': '12345' };\n//store.dispatch(loginUser(auth));\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}